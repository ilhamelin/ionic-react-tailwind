// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import { getAnalytics } from "firebase/analytics";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyBKBBp8GYB_G05kiLbN813ondwBrQe9CF4",
  authDomain: "data-base-uber-eats.firebaseapp.com",
  databaseURL: "https://data-base-uber-eats-default-rtdb.firebaseio.com",
  projectId: "data-base-uber-eats",
  storageBucket: "data-base-uber-eats.appspot.com",
  messagingSenderId: "948116538428",
  appId: "1:948116538428:web:b7d2cd4b23d13b4bbfaf39",
  measurementId: "G-BE23FLZF7Z"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const analytics = getAnalytics(app);





// MAPA GoogleMap


import React, { useEffect, useRef } from "react";
import { Loader } from "@googlemaps/js-api-loader";

const Mapa = () => {
  const mapRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (!mapRef.current) return; // Evitar errores si mapRef.current es null

    const loader = new Loader({
      apiKey: "AIzaSyB9OZu4qBJUXoTZfyQKpY6Psk-mZIWi2TA",
      version: "weekly",
    });

    loader
      .load()
      .then(() => {
        return loader.importLibrary("geometry");
      })
      .then(() => {
        const map = new google.maps.Map(mapRef.current!, {
          center: { lat: -33.4489, lng: -70.6693 },
          zoom: 13,
        });

        new google.maps.Marker({
          position: { lat: -33.4489, lng: -70.6693 },
          map,
        });
      });
  }, []);

  return <div ref={mapRef} style={{ height: "700px", width: "100%" }} />;
};

export default Mapa;


